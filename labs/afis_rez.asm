IF1
	INCLUDE C:\TASM\proj\MACROS.MAC
ENDIF

DATA SEGMENT PARA PUBLIC 'DATA'
	EXTRN COM_SUBS_LEN	:BYTE
	EXTRN LEN_SIR_A		:BYTE
	EXTRN LEN_SIR_B		:BYTE
	EXTRN SIR_A			:BYTE
	EXTRN SIR_B			:BYTE
	EXTRN FATHER		:WORD
	
	COM_SUBS_LEN_MESSAGE DB "The length of the longest common subsequence: $"
	COM_SUBS_MESSAGE 	DB 10,13,"The longest common subsequence is: $"
	NO_COM_SUBS_MESSAGE DB 10,13,"There is no common subsequence.$"
DATA ENDS

CODE SEGMENT PARA PUBLIC 'CODE'
ASSUME CS:CODE, DS:DATA

EXTRN DISPLAY_AX:NEAR

PUBLIC AFIS_REZ

	AFIS_REZ PROC NEAR
		PUSHALL
		
		DISPLAY_MESSAGE COM_SUBS_LEN_MESSAGE
		
		XOR AX,AX
		MOV AL,COM_SUBS_LEN
		CALL DISPLAY_AX	;DISPLAY COM_SUBS_LEN
		
		CMP AX,0
		JE NO_COM_SUBS  ;IF THERE IS NO COMMON SUBSEQUENCE, WE DO NOT CALL DISPLAY_SUBSQ
		
		DISPLAY_MESSAGE COM_SUBS_MESSAGE
		CALL DISPLAY_SUBSQ
		JMP FINISH
		
		
		NO_COM_SUBS: DISPLAY_MESSAGE NO_COM_SUBS_MESSAGE
	
		FINISH:
		POPALL
		RET
	AFIS_REZ ENDP	
	
	;DISPLAYS COMMON SUBSEQUENCE
	DISPLAY_SUBSQ PROC NEAR
		PUSHALL
		
		XOR AX,AX
		MOV AL,LEN_SIR_A
		MOV SI,AX 			;INITIALIZE SI WITH LEN_SIR_A
		
		MOV AL,LEN_SIR_B
		MOV DI,AX			;INITIALIZE DI WITH LEN_SIR_B
		
		MAKE_POSITION SI,DI
		SHL BX,1 			;BECAUSE FATHER IS MATRIX OF WORDS
		
		AGAIN:
				MOV DL,SIR_A[SI]
				CMP DL,SIR_B[DI] ;CMP SIR_A[AI],SIR_B[DI]
				JNE ADVANCE
				
				XOR DH,DH
				PUSH DX 		 ;STORE SIR_A[SI] WHICH IS EQUAL WITH SIR_B[DI]

				ADVANCE:
				
				MOV BX,FATHER[BX];BX = THE FATHER CELL
				CMP BX,0
				JE SHOW_SUBS
				
				MOV AX,BX
				SHR AX,1		 ;AX = AX/2 BECAUSE BX IS CALCULATED ON MATRIX OF WORDS
				XOR DX,DX
				MOV CX,MAX_LINE_LEN
				DIV CX 			 ;AX = THE X FROM THE FATHER CELL
								 ;DX = THE Y FROM THE FATHER CELL
				
				MOV SI,AX
				MOV DI,DX
				
				JMP AGAIN
		
		SHOW_SUBS:
		
		XOR CH,CH
		MOV CL,COM_SUBS_LEN    ;INITIALIZE CX WITH COMMON SUBSEQUENCE LENGTH
		
		MOV AH,02H
		
		NEXT:	POP DX         ;RETRIEVE THE CHARACTER AND DISPLAY IT
				INT 21H
				LOOP NEXT
				
		POPALL
		RET
	DISPLAY_SUBSQ ENDP
CODE ENDS
END AFIS_REZ